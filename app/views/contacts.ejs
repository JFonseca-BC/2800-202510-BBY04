<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Basic page setup -->
        <title>VestAbode</title>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />

        <!-- Page favicon -->
        <link rel="icon" type="image/x-icon" href="/images/favicon.ico" />

        <!-- External styles & libraries -->
        <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css"
            rel="stylesheet"
        />
        <link
            rel="stylesheet"
            href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
        />
        <link
            rel="stylesheet"
            href="https://fonts.googleapis.com/icon?family=Material+Icons"
        />

        <!-- Custom app-wide styles -->
        <link rel="stylesheet" href="/styles/style.css" />

        <!-- Inline style for map container height -->
        <style>
            #map {
                height: 400px;
                margin-top: 2rem;
            }
        </style>
    </head>

    <body>
        <!-- Navbar is dynamically injected-->
        <nav id="navbarPlaceholder"></nav>

        <div class="container my-5">
            <h1>Find Nearby Handyman Services</h1>

            <!-- Search form sends user's issue and location to server via POST -->
            <form id="searchForm" action="/contacts/search" method="POST">
                <!-- Hidden inputs for geolocation data filled by JS -->
                <input type="hidden" name="lat" id="lat" />
                <input type="hidden" name="lon" id="lon" />

                <!-- User input for describing the issue -->
                <div class="mb-3 input-group">
                    <label for="issue" class="input-group-text">
                        <i class="material-icons">search</i>
                    </label>
                    <input
                        type="text"
                        class="form-control"
                        id="issue"
                        name="issue"
                        placeholder="What’s Broken?"
                        required
                    />
                    <button class="btn btn-primary">Search</button>
                </div>
            </form>

            <!-- Map container: Leaflet renders interactive map here -->
            <div id="map"></div>

            <!-- If matching handymen found, render results below -->
            <% if (handymen && handymen.length> 0) { %>
            <h2 class="mt-4">Nearby Services:</h2>
            <ul class="list-group">
                <% handymen.forEach(h=> { %>
                <li class="list-group-item">
                    <strong> <%= h.name %> </strong> - <%= h.category %><br />
                    Rating: <%= h.rating %> ⭐<br />
                    Location: <%= h.address %><br />
                    Phone: <%= h.phone %>
                </li>
                <% }) %>
            </ul>
            <% } else if (typeof handymen !=='undefined' ) { %>
            <!-- If search ran but no results returned -->
            <div class="alert alert-warning mt-4">No services found.</div>
            <% } %>
        </div>

        <!-- Footer dynamically loaded from templateLoader.js -->
        <nav id="footerPlaceholder"></nav>

        <!-- External libraries -->
        <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
        <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

        <!-- Loads shared templates (navbar, footer) into placeholders -->
        <script src="/scripts/templateLoader.js"></script>

        <script>
            // Get user's location using browser geolocation
            navigator.geolocation.getCurrentPosition((position) => {
                const userLat = position.coords.latitude;
                const userLon = position.coords.longitude;

                // Fill hidden form fields with user coordinates
                document.getElementById('lat').value = userLat;
                document.getElementById('lon').value = userLon;

                // Initialize Leaflet map centered on user's location
                const map = L.map('map').setView([userLat, userLon], 13);

                // Load OpenStreetMap tiles
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '© OpenStreetMap contributors'
                }).addTo(map);

                // Mark user’s location on the map
                L.marker([userLat, userLon]).addTo(map)
                    .bindPopup('You are here')
                    .openPopup();

                // EJS-injected array of handyman services (if any)
                const handymen = <% - JSON.stringify(handymen || []) %>;

                // Add a marker for each handyman service
                handymen.forEach(h => {
                    L.marker([h.lat, h.lon])
                        .addTo(map)
                        .bindPopup(`<strong>${h.name}</strong><br>${h.address}`);
                });

            }, () => {
                // Geolocation failure handler
                alert('Could not get location. Please enable location services.');
            });
        </script>
    </body>
</html>
